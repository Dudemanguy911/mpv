# build options

option('license', type: 'combo', choices: ['gpl', 'lgpl'], value: 'gpl', description: 'choose between gpl or lgpl build.')
option('cplayer', type: 'boolean', value: true, description: 'mpv CLI player')
option('libmpv-shared', type: 'boolean', value: false, description: 'shared library')
option('libmpv-static', type: 'boolean', value: false, description: 'static library')
option('static-build', type: 'boolean', value: false, description: 'static build')
option('build-date', type: 'boolean', value: true, description: 'whether to include binary compile time')
option('tests', type: 'boolean', value: false, description: 'unit tests (development only)')
# Reminder: normally always built, but enabled by MPV_LEAK_REPORT.
# Building it can be disabled only by defining NDEBUG through CFLAGS.
option('ta-leak-report', type: 'boolean', value: false, description: 'enable ta leak report by default (development only)')
option('manpage-build', type: 'feature', value: 'auto', description: 'manpage generation')
option('html-build', type: 'feature', value: 'disabled', description: 'html manual generation')
option('pdf-build', type: 'feature', value: 'disabled', description: 'pdf manual generation')
option('libdl', type: 'feature', value: 'auto', description: 'dynamic loader')
option('cplugins', type: 'boolean', value: true, description: 'C plugins')
# does nothing - left for backward and forward compatibility
option('asm', type: 'boolean', value: false, description: 'inline assembly (currently without effect)')
option('clang-database', type: 'boolean', value: false, description: 'generate a clang compilation database')
option('swift-static', type: 'boolean', value: false, description: 'static Swift linking')

# main dependencies
option('android', type: 'feature', value: 'auto', description: 'Android environment')
option('tvos', type: 'feature', value: 'auto', description: 'tvOS environment')
option('egl-android', type: 'feature', value: 'auto', description: 'Android EGL support')
option('swift-macos', type: 'feature', value: 'auto', description: 'macOS Swift build tools')
option('uwp', type: 'feature', value: 'auto', description: 'Universal Windows Platform')
option('win32-desktop', type: 'feature', value: 'auto', description: 'win32 desktop APIs')
option('win32-internal-pthreads', type: 'feature', value: 'auto', description: 'internal pthread wrapper for win32 (Vista+)')
# NB: this works only if a source file includes osdep/threads.h
#     also, technically, triggers undefined behavior (reserved names)
option('pthread-debug', type: 'boolean', value: false, description: 'pthread runtime debugging wrappers')
option('iconv', type: 'feature', value: 'auto', description: 'iconv')
option('lua', type: 'feature', value: 'auto', description: 'Lua')
option('javascript', type: 'feature', value: 'auto', description: 'Javascript (MuJS backend)')
option('zlib', type: 'feature', value: 'auto', description: 'zlib')
option('libbluray', type: 'feature', value: 'auto', description: 'Bluray support')
option('dvdnav', type: 'feature', value: 'auto', description: 'dvdnav support')
option('cdda', type: 'feature', value: 'disabled', description: 'cdda support (libcdio)')
option('uchardet', type: 'feature', value: 'auto', description: 'uchardet support')
option('rubberband', type: 'feature', value: 'auto', description: 'librubberband support')
option('zimg', type: 'feature', value: 'auto', description: 'libzimg support (high quality software scaler)')
option('lcms2', type: 'feature', value: 'auto', description: 'LCMS2 support')
option('vapoursynth', type: 'feature', value: 'auto', description: 'VapourSynth filter bridge')
option('libarchive', type: 'feature', value: 'auto', description: 'libarchive wrapper for reading zip files and more')
option('dvbin', type: 'boolean', value: true, description: 'DVB input module')
option('sdl2', type: 'feature', value: 'disabled', description: 'SDL2')
option('sdl2-gamepad', type: 'feature', value: 'auto', description: 'SDL2 gamepad input')

# libav dependencies
option('libavdevice', type: 'feature', value: 'auto', description: 'libavdevice')
option('ffmpeg-strict-abi', type: 'boolean', value: false, description: 'Disable all known FFmpeg ABI violations')

# audio output features
option('sdl2-audio', type: 'feature', value: 'auto', description: 'SDL2 audio output')
option('pulse', type: 'feature', value: 'auto', description: 'PulseAudio audio output')
option('jack', type: 'feature', value: 'auto', description: 'JACK audio output')
option('openal', type: 'feature', value: 'disabled', description: 'OpenAL audio output')
option('opensles', type: 'feature', value: 'auto', description: 'OpenSL ES audio output')
option('alsa', type: 'feature', value: 'auto', description: 'ALSA audio output')
option('coreaudio', type: 'feature', value: 'auto', description: 'CoreAudio audio output')
option('audiounit', type: 'feature', value: 'auto', description: 'AudioUnit output for iOS')
option('wasapi', type: 'feature', value: 'auto', description: 'WASAPI audio output')

# video output features
option('sdl2-video', type: 'feature', value: 'auto', description: 'SDL2 video output')
option('Cocoa', type: 'feature', value: 'auto', description: 'Cocoa')
option('drm', type: 'feature', value: 'auto', description: 'DRM')
option('gbm', type: 'feature', value: 'auto', description: 'GBM')
option('wayland', type: 'feature', value: 'auto', description: 'Wayland')
option('x11', type: 'feature', value: 'auto', description: 'X11')
option('xv', type: 'feature', value: 'auto', description: 'Xv video output')
option('gl', type: 'boolean', value: 'true', description: 'OpenGL context support')
option('gl-cocoa', type: 'feature', value: 'auto', description: 'gl-cocoa')
option('gl-x11', type: 'feature', value: 'auto', description: 'OpenGL X11 Backend')
option('rpi', type: 'feature', value: 'disabled', description: 'Raspberry Pi support')
option('egl', type: 'feature', value: 'auto', description: 'EGL 1.4')
option('egl-x11', type: 'boolean', value: true, description: 'OpenGL X11 EGL Backend')
option('egl-drm', type: 'boolean', value: true, description: 'OpenGL DRM EGL Backend')
option('gl-wayland', type: 'feature', value: 'auto', description: 'OpenGL Wayland Backend')
option('gl-win32', type: 'feature', value: 'auto', description: 'OpenGL Win32 Backend')
option('gl-dxinterop', type: 'feature', value: 'auto', description: 'OpenGL/DirectX Interop Backend')
option('egl-angle', type: 'feature', value: 'auto', description: 'OpenGL ANGLE headers')
option('egl-angle-lib', type: 'feature', value: 'auto', description: 'OpenGL Win32 ANGLE library')
option('egl-angle-win32', type: 'feature', value: 'auto', description: 'OpenGL Win32 ANGLE Backend')
option('vdpau', type: 'feature', value: 'auto', description: 'VDPAU acceleration')
option('vdpau-gl-x11', type: 'feature', value: 'auto', description: 'VDPAU with OpenGl/X11')
option('vaapi', type: 'feature', value: 'auto', description: 'VAAPI acceleration')
option('vaapi-x11', type: 'feature', value: 'auto', description: 'VAAPI (X11 support)')
option('vaapi-wayland', type: 'feature', value: 'auto', description: 'VAAPI (Wayland support)')
option('vaapi-drm', type: 'feature', value: 'auto', description: 'VAAPI (DRM/EGL support)')
option('vaapi-x-egl', type: 'feature', value: 'auto', description: 'VAAPI EGL on X11')
option('caca', type: 'feature', value: 'auto', description: 'CACA')
option('jpeg', type: 'feature', value: 'auto', description: 'JPEG support')
option('direct3d', type: 'feature', value: 'auto', description: 'Direct3D support')
option('shaderc', type: 'feature', value: 'auto', description: 'libshaderc SPIR-V compiler')
option('spirv-cross', type: 'feature', value: 'auto', description: 'SPIRV-Cross SPIR-V shader converter')
option('d3d11', type: 'feature', value: 'auto', description: 'Direct3D 11 video output')
option('ios-gl', type: 'feature', value: 'auto', description: 'iOS OpenGL ES hardware decoding interop support')
option('plain-gl', type: 'boolean', value: false, description: 'OpenGL without platform-specific code (e.g. for libmpv)')
option('libplacebo', type: 'feature', value: 'auto', description: 'libplacebo support')
option('vulkan', type: 'feature', value: 'auto', description: 'Vulkan context support')

# hwaccel features
option('videotoolbox-gl', type: 'feature', value: 'auto', description: 'Videotoolbox with OpenGL')
option('d3d-hwaccel', type: 'feature', value: 'auto', description: 'D3D11VA hwaccel')
option('d3d9-hwaccel', type: 'feature', value: 'auto', description: 'DXVA2 hwaccel')
option('gl-dxinterop-d3d9', type: 'feature', value: 'auto', description: 'OpenGL/DirectX Interop Backend DXVA2 interop')
option('cuda-hwaccel', type: 'feature', value: 'auto', description: 'CUDA acceleration')
option('cuda-interop', type: 'boolean', value: true, description: 'CUDA with graphics interop')
option('rpi-mmal', type: 'feature', value: 'auto', description: 'Raspberry Pi MMAL hwaccel')

# standalone features
option('macos-touchbar', type: 'feature', value: 'auto', description: 'macOS Touch Bar support')
option('macos-10-11-features', type: 'feature', value: 'auto', description: 'macOS 10.11 SDK Features')
option('macos-10-12-2-features', type: 'feature', value: 'auto', description: 'macOS 10.12.2 SDK Features')
option('macos-10-14-features', type: 'feature', value: 'auto', description: 'macOS 10.14 SDK Features')
option('macos-media-player', type: 'feature', value: 'auto', description: 'macOS Media Player support')
option('macos-cocoa-cb', type: 'feature', value: 'auto', description: 'macOS libmpv backend')
